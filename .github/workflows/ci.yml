name: Galaxy Tool CI
on:
  pull_request:
    paths-ignore:
      - '*.md'
      - '.git*'
  push:
    paths-ignore:
      - '*.md' 
      - '.git*'
    branches:
      - main
      - master
  release:
    types: [published]

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  # Run linting and tests on pull requests and pushes
  setup:
    name: Setup cache and determine changed repositories
    if: github.repository_owner != 'bgruening' || github.event_name != 'schedule'
    runs-on: ubuntu-latest
    outputs:
      repository-list: ${{ steps.discover.outputs.repository-list }}
      tool-list: ${{ steps.discover.outputs.tool-list }}
    steps:
    - name: Print github context
      run: |
        echo '${{ toJson(github) }}'
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0
    - uses: galaxyproject/planemo-ci-action@v1
      id: discover
      with:
        create-cache: true
        galaxy-fork: galaxyproject
        galaxy-branch: release_23.2
        max-chunks: 0
    - name: Show repository list
      run: echo '${{ steps.discover.outputs.repository-list }}'
    - name: Show tool list  
      run: echo '${{ steps.discover.outputs.tool-list }}'

  lint:
    name: Lint tools
    needs: setup
    if: needs.setup.outputs.repository-list != ''
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ['3.8']
    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 1
    - uses: galaxyproject/planemo-ci-action@v1
      with:
        mode: lint
        repository-list: ${{ needs.setup.outputs.repository-list }}
        biocontainer: auto
        galaxy-fork: galaxyproject
        galaxy-branch: release_23.2

  test:
    name: Test tools
    needs: setup
    if: needs.setup.outputs.tool-list != ''
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        chunk: ${{ fromJson(needs.setup.outputs.tool-list) }}
        python-version: ['3.8']
    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 1
    - uses: galaxyproject/planemo-ci-action@v1
      with:
        mode: test
        repository-list: ${{ needs.setup.outputs.repository-list }}
        tool-list: ${{ matrix.chunk }}
        galaxy-fork: galaxyproject
        galaxy-branch: release_23.2

  combine_outputs:
    name: Combine chunked test results
    needs: [setup, test]
    if: needs.setup.outputs.tool-list != ''
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 1
    - uses: galaxyproject/planemo-ci-action@v1
      with:
        mode: combine
        html-report: true
    - uses: actions/upload-artifact@v3
      with:
        name: 'All tool test results'
        path: upload

  # Deploy to ToolShed only on release
  deploy:
    name: Deploy tools to ToolShed
    needs: [lint, test, combine_outputs]
    if: github.event_name == 'release' && github.event.action == 'published'
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 1
    - uses: galaxyproject/planemo-ci-action@v1
      with:
        mode: deploy
        repository-list: ${{ needs.setup.outputs.repository-list }}
        shed-target: toolshed
        shed-key: ${{ secrets.TOOLSHED_API_KEY }}
        galaxy-fork: galaxyproject
        galaxy-branch: release_23.2

  # Alternative: Deploy on version tag push (instead of release)
  deploy-on-tag:
    name: Deploy tools to ToolShed (on version tag)
    needs: [lint, test, combine_outputs]
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/v')
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 1
    - uses: galaxyproject/planemo-ci-action@v1
      with:
        mode: deploy
        repository-list: ${{ needs.setup.outputs.repository-list }}
        shed-target: toolshed
        shed-key: ${{ secrets.TOOLSHED_API_KEY }}
        galaxy-fork: galaxyproject
        galaxy-branch: release_23.2
